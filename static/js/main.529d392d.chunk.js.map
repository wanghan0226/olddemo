{"version":3,"sources":["route/router.tsx","store/factory.ts","store/index.ts","route/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Loading","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","antd_es_spin__WEBPACK_IMPORTED_MODULE_1__","size","BaseLayout","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","UserLayout","Login","Index","IllegalSetting","IllegalInfo","NotFound","__webpack_exports__","path","component","hideMenu","routes","name","exact","redirect","icon","factory","$name","initState","state","arguments","length","undefined","_ref","type","data","Object","objectSpread","sessionStorage","setItem","JSON","stringify","MENU_TABS","getItem","stores","menuTabs","parse","active","parent","list","reducers","combineReducers","Store","createStore","applyMiddleware","thunk","RoutesIndex","_react_16_8_6_react_default","react_router","fun","_routes","_route","map","route","key","render","props","assign","Component","App","_react_document_title_2_0_3_react_document_title_default","title","react_router_dom","src_route","Boolean","window","location","hostname","match","ReactDOM","locale_provider","locale","zhCN","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+IAIMA,EAAU,WACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,YAKXC,EAAaC,IAAS,CAC1BC,OAAQ,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAShB,IAGLiB,EAAaT,IAAS,CAC1BC,OAAQ,kBAAMG,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAShB,IAGLkB,EAAQV,IAAS,CACrBC,OAAQ,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAShB,IAGLmB,EAAQX,IAAS,CACrBC,OAAQ,kBAAMG,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAShB,IAGLoB,EAAiBZ,IAAS,CAC9BC,OAAQ,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAShB,IAGLqB,EAAcb,IAAS,CAC3BC,OAAQ,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAShB,IAGLsB,EAAWd,IAAS,CACxBC,OAAQ,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAShB,IAGIuB,EAAA,GACb,CACEC,KAAM,SACNC,UAAWR,EACXS,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,eACNJ,KAAM,SACNC,UAAWP,KAIjB,CACEM,KAAM,IACNC,UAAWlB,EACXsB,OAAO,EACPH,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,eACNJ,KAAM,IACNC,UAAWN,KAIjB,CACES,KAAM,2BACNJ,KAAM,WACNC,UAAWlB,EACXuB,SAAU,gBACVC,KAAM,eACNJ,OAAQ,CACN,CACEC,KAAM,uCACNJ,KAAM,gBACNC,UAAWJ,GAEb,CACEO,KAAM,2BACNJ,KAAM,mBACNC,UAAWL,KAIjB,CACEQ,KAAM,2BACNJ,KAAM,eACNO,KAAM,gBAER,CACEH,KAAM,2BACNJ,KAAM,UACNO,KAAM,gBAER,CAAEP,KAAM,IAAKE,UAAU,EAAMD,UAAWH,gOCzF3BU,MAbf,SAAwBC,EAAeC,GACrC,OAAO,WAA6E,IAA5EC,EAA4EC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApEF,EAAoEK,EAAAH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAvDE,EAAuDD,EAAvDC,KAAMC,EAAiDF,EAAjDE,KAQjC,OAPID,IAASP,IACXE,EAAKO,OAAAC,EAAA,EAAAD,CAAA,GAAQP,EAAUM,GACvBG,eAAeC,QACbZ,EACAa,KAAKC,UAAUZ,KAGZA,ICOPa,EAAYJ,eAAeK,QAAQ,aAEjCC,EAAiB,CACrBC,SAAUnB,EAAmB,YAAagB,EAAYF,KAAKM,MAAMJ,GAAa,CAC5EK,OAAQ,CACNzB,KAAM,eACNJ,KAAM,KAER8B,OAAQ,GACRC,KAAM,CAAC,CACL3B,KAAM,eACNJ,KAAM,SAINgC,EAAWC,YAAgBP,GACpBQ,EAAQC,YAAYH,EAAUI,YAAgBC,0HCC5CC,mLALX,OAAOC,EAAA7D,EAAAC,cAAC6D,EAAA,EAAD,KAvBC,SAANC,EAAM1B,GAA8B,IAA3B2B,EAA2B3B,EAA3B2B,QAASC,EAAkB5B,EAAlB4B,OACtB,OAAOD,EAAQE,IAAI,SAACC,EAAYC,GAC9B,OAAID,EAAM1C,QAAU0C,EAAM1C,OAAOU,OAAS,EAEtC0B,EAAA7D,EAAAC,cAAC6D,EAAA,EAAD,CAAOM,IAAKA,EAAKzC,MAAOwC,EAAMxC,MAAOL,KAAM6C,EAAM7C,MAC/CuC,EAAA7D,EAAAC,cAACkE,EAAM5C,UAAP,KAAkBwC,EAAI,CAAEC,QAASG,EAAM1C,OAAQwC,OAAQE,MAIpDC,IAAQJ,EAAQ7B,OAAS,GAAK8B,EACnCJ,EAAA7D,EAAAC,cAAC6D,EAAA,EAAD,CAAOM,IAAKA,GACVP,EAAA7D,EAAAC,cAAC6D,EAAA,EAAD,CAAOM,IAAKA,EAAK9C,KAAM6C,EAAM7C,KAAM+C,OAAQ,SAACC,GAAD,OAAgBT,EAAA7D,EAAAC,cAACkE,EAAM5C,UAAPiB,OAAA+B,OAAA,GAAqBD,EAArB,CAA4B7C,OAAQ0C,EAAM1C,cAIvGoC,EAAA7D,EAAAC,cAAC6D,EAAA,EAAD,CAAOM,IAAKA,EAAK9C,KAAM6C,EAAM7C,KAAM+C,OAAQ,SAACC,GAAD,OAAgBT,EAAA7D,EAAAC,cAACkE,EAAM5C,UAAPiB,OAAA+B,OAAA,GAAqBD,EAArB,CAA4B7C,OAAQ0C,EAAM1C,eAQzFsC,CAAI,CAAEC,QAASvC,cAFT+C,aCPXC,2LAVX,OACEZ,EAAA7D,EAAAC,cAACyE,EAAA1E,EAAD,CAAe2E,MAAM,gEACnBd,EAAA7D,EAAAC,cAAC2E,EAAA,EAAD,KACEf,EAAA7D,EAAAC,cAAC4E,EAAD,eALQL,cCKEM,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCJjCC,IAASd,OACPR,EAAA7D,EAAAC,cAAAmF,EAAA,GAAgBC,OAAQC,KACtBzB,EAAA7D,EAAAC,cAACsF,EAAA,EAAD,CAAUC,MAAOhC,GACfK,EAAA7D,EAAAC,cAACwF,EAAD,QAGJC,SAASC,eAAe,SDiGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlF,KAAK,SAAAmF,GACjCA,EAAaC","file":"static/js/main.529d392d.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"ant-loading\">\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BaseLayout = Loadable({\r\n  loader: () => import('../layout/BaseLayout'),\r\n  loading: Loading\r\n});\r\n\r\nconst UserLayout = Loadable({\r\n  loader: () => import('../layout/UserLayout'),\r\n  loading: Loading\r\n});\r\n\r\nconst Login = Loadable({\r\n  loader: () => import('../page/Login'),\r\n  loading: Loading\r\n});\r\n\r\nconst Index = Loadable({\r\n  loader: () => import('../page/Index'),\r\n  loading: Loading\r\n});\r\n\r\nconst IllegalSetting = Loadable({\r\n  loader: () => import('../page/Illegal/Setting'),\r\n  loading: Loading\r\n});\r\n\r\nconst IllegalInfo = Loadable({\r\n  loader: () => import('../page/Illegal/Info'),\r\n  loading: Loading\r\n});\r\n\r\nconst NotFound = Loadable({\r\n  loader: () => import('../page/NotFound'),\r\n  loading: Loading\r\n});\r\n\r\nexport default [\r\n  {\r\n    path: '/login',\r\n    component: UserLayout,\r\n    hideMenu: true,\r\n    routes: [\r\n      {\r\n        name: '登录',\r\n        path: '/login',\r\n        component: Login\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    component: BaseLayout,\r\n    exact: true,\r\n    hideMenu: true,\r\n    routes: [\r\n      {\r\n        name: '首页',\r\n        path: '/',\r\n        component: Index\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: '违法确认',\r\n    path: '/illegal',\r\n    component: BaseLayout,\r\n    redirect: '/illegal/info',\r\n    icon: 'minus-square',\r\n    routes: [\r\n      {\r\n        name: '违法信息确认',\r\n        path: '/illegal/info',\r\n        component: IllegalInfo\r\n      },\r\n      {\r\n        name: '设备设置',\r\n        path: '/illegal/setting',\r\n        component: IllegalSetting\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: '统计分析',\r\n    path: '/statistical',\r\n    icon: 'minus-square'\r\n  },\r\n  {\r\n    name: '系统管理',\r\n    path: '/system',\r\n    icon: 'minus-square'\r\n  },\r\n  { path: '*', hideMenu: true, component: NotFound }\r\n];\r\n","function factory<Itype>($name: string, initState: Itype) {\r\n  return (state = initState, { type, data }: { type: string, data: Itype }): Itype => {\r\n    if (type === $name) {\r\n      state = { ...state, ...data };\r\n      sessionStorage.setItem(\r\n        $name,\r\n        JSON.stringify(state)\r\n      );\r\n    };\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default factory;","import { applyMiddleware, createStore, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport factory from './factory';\r\n\r\ninterface IMenuItem {\r\n  name?: string;\r\n  path: string;\r\n  parent?: IMenuItem;\r\n}\r\n\r\nexport declare interface IMenuTabs {\r\n  active: IMenuItem;\r\n  parent: IMenuItem,\r\n  list: IMenuItem[];\r\n}\r\n\r\nlet MENU_TABS = sessionStorage.getItem('MENU_TABS');\r\n\r\nconst stores: object = {\r\n  menuTabs: factory<IMenuTabs>('MENU_TABS', MENU_TABS ? JSON.parse(MENU_TABS) : {\r\n    active: {\r\n      name: '首页',\r\n      path: '/',\r\n    },\r\n    parent: {} as IMenuItem,\r\n    list: [{\r\n      name: '首页',\r\n      path: '/',\r\n    }]\r\n  }),\r\n};\r\nconst reducers = combineReducers(stores);\r\nexport const Store = createStore(reducers, applyMiddleware(thunk));","import React, { Component } from 'react';\r\n// import { hot } from 'react-hot-loader';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport routes from './router';\r\n\r\nconst fun = ({ _routes, _route }: any) => {\r\n  return _routes.map((route: any, key: number) => {\r\n    if (route.routes && route.routes.length > 0) {\r\n      return (\r\n        <Route key={key} exact={route.exact} path={route.path}>\r\n          <route.component>{fun({ _routes: route.routes, _route: route })}</route.component>\r\n        </Route>\r\n      );\r\n    } else {\r\n      return key === _routes.length - 1 && _route ? (\r\n        <Route key={key}>\r\n          <Route key={key} path={route.path} render={(props: any) => <route.component {...props} routes={route.routes} />} />\r\n          {/* <Route exact={true} path={_route.path} render={() => <Redirect to={_route.routes[0].path} />} /> */}\r\n        </Route>\r\n      ) : (\r\n        <Route key={key} path={route.path} render={(props: any) => <route.component {...props} routes={route.routes} />} />\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nclass RoutesIndex extends Component {\r\n  public render() {\r\n    return <Switch>{fun({ _routes: routes })}</Switch>;\r\n  }\r\n}\r\n\r\n// export default hot(module)(withRouter(RoutesIndex));\r\nexport default RoutesIndex;\r\n","import React, { Component } from 'react';\r\nimport DocumentTitle from 'react-document-title';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport RouteIndex from './route';\r\n\r\nimport './App.less';\r\n\r\nclass App extends Component {\r\n  public render() {\r\n    return (\r\n      <DocumentTitle title=\"违法鸣笛抓拍管理平台\">\r\n        <Router>\r\n          <RouteIndex />\r\n        </Router>\r\n      </DocumentTitle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: any, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: any, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'babel-polyfill';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Store } from './store/index';\r\nimport { LocaleProvider } from 'antd';\r\nimport zhCN from 'antd/es/locale-provider/zh_CN';\r\nimport 'url-search-params-polyfill';\r\nimport 'moment/locale/zh-cn';\r\nimport './index.less';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <LocaleProvider locale={zhCN}>\r\n    <Provider store={Store}>\r\n      <App />\r\n    </Provider>\r\n  </LocaleProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}